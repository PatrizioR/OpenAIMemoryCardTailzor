<!-- Add a placeholder for the logo -->
@if (!_isNameEntered)
{
    <div class="flex justify-center mb-6">
        <img src="images/assets/logo.png" alt="Memory Game Logo" class="h-20 w-auto" />
    </div>
}
<h1 class="text-5xl font-bold text-purple-600 mb-8">
    @if (!_isNameEntered)
    {
        <span>Memory Game</span>
    }
    else
    {
        <span class="text-blue-500">@_currentPlayer?.Name</span>
    }
</h1>
@if (!_isNameEntered)
{
    <div class="bg-green-100 p-8 rounded-xl shadow-md">
        <div class="mb-4">
            <label for="player1Name" class="block text-lg font-medium text-purple-600 mb-2">Player 1 Name:</label>
            <input id="player1Name" type="text" @bind="_player1.Name" class="border-2 border-purple-500 p-2 rounded-lg w-full focus:border-blue-400" />
        </div>
        <div class="mb-4">
            <label for="player2Name" class="block text-lg font-medium text-purple-600 mb-2">Player 2 Name:</label>
            <input id="player2Name" type="text" @bind="_player2.Name" class="border-2 border-purple-500 p-2 rounded-lg w-full focus:border-blue-400" />
        </div>
        <label for="category" class="block mt-4 mb-1">Category:</label>
        <select id="category" @bind="_cardCategory" class="border border-gray-300 p-2 rounded-md w-full">
            <option value="" selected="selected">Filter category...</option>
            @foreach (var category in Cards.Select(card => card.Category).Distinct().Order())
            {
                <option value="@category">@category</option>
            }
        </select>
        <label for="numCards" class="block mt-4 mb-1">Number of Cards:</label>
        <select id="numCards" @bind="_cardCount" class="border border-gray-300 p-2 rounded-md w-full">
            <option value="8">8</option>
            <option value="12">12</option>
            <option value="16">16</option>
            <option value="20">20</option>
            <option value="24">24</option>
            <option value="32">32</option>
        </select>
        <button @onclick="() => SetPlayerNamesAsync(_player1.Name, _player2.Name)" class="bg-yellow-500 text-white px-6 py-2 rounded-lg mt-6 hover:bg-yellow-400">Start Game</button>
    </div>
}

@if (_isNameEntered && !_isGameOver && PlayCards != null)
{
    <div class="grid grid-cols-4 gap-6 mt-8">
        @foreach (var card in PlayCards)
        {
            <MemoryCardComponent Card="@card" IsFlipped="card.IsFlipped" OnCardClick="() => OnCardClick(card)" />
        }
    </div>
    <div class="flex justify-between mt-12 mb-6 text-2xl font-medium">
        <!-- Increased top and bottom margins -->
        <div class="@(_currentPlayer == _player1 ? "text-purple-600" : "text-gray-500") mr-6">@_player1.Name: @_player1.Score</div>
        <!-- Increased right margin -->
        <div class="@(_currentPlayer == _player2 ? "text-purple-600" : "text-gray-500")">@_player2.Name: @_player2.Score</div>
    </div>
}

@if (_isGameOver)
{
    <div class="bg-red-200 p-6 rounded-xl mt-8 text-center">
        <h2 class="text-3xl font-bold text-red-600">Game Over. @_currentPlayer.Name wins! (Points: @_currentPlayer.Score)</h2>
        <button @onclick="RestartGame" class="bg-yellow-500 text-white px-6 py-2 rounded-lg mt-6 hover:bg-yellow-400">Restart Game</button>
    </div>
}
